
@model GospelWorld.Models.EventModel
@{
    ViewBag.Title = "Add Eventt";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@using (Html.BeginForm("AddEvent", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{ 
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*@Html.HiddenFor(model => model.EventId)*@
    <input type="hidden" name="EventId" value="@Model.EventId" />

    <div class="form-group">
        @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EventDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.EventDescription, new { id = "cke", @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.EventDescription, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EventTheme, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventTheme, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventTheme, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EventLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventLocation, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EventImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="EventImageFile" class="imgInp form-control" accept=".png,.jpg,.jpeg,.gif,.tif" required />
        </div>
        <div class="col-md-offset-2 col-md-10">
            <img src="@Url.Content("~/Content/Images/")@Model.EventImageUrl" width="150" height="150" class="img-upload" alt="Event Image" />
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.EventImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="EventImageFile" class="imgInp form-control" accept=".png,.jpg,.jpeg,.gif,.tif" required />
            </div>
            <div class="col-md-offset-2 col-md-10">
                <img src="@Url.Content("~/Content/Images/")@Model.EventImageUrl" width="150" height="150" class="img-upload" alt="Event Image" />
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" name="EventDate" class="form-dateInput" placeholder="mm/dd/yyyy hh:mm:ss" />
            @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.EventType, (IEnumerable<SelectListItem>)ViewBag.Events, "Select Event Category", new { @class = "form-control" })

        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*<script type="text/javascript">
    CKEDITOR.replace('cke');
</script>
@if (Model.Done)
{
    <script>
        navigate("/Admin/EventList");

        function navigate(href) {


            $.ajax({
                url: href,
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#renderbody').html(result);
                }
            });

        }
    </script>
}*@
